import { type NextPage } from "next";
import Head from "next/head";
import useHasMounted from "../hooks/hasMounted";
// import Link from "next/link";
// import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "../utils/api";
import Item from "../components/Item";
import Footer from "../components/Footer";
import Navbar from "../components/Navbar";

const Home: NextPage = () => {
  const hasMounted = useHasMounted();
  const getItems = api.example.getNames.useQuery();

  return (
    <>
      <Head>
        <title>Шаблоны Notion от Кирилла</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen w-full flex-col bg-slate-100">
        <Navbar />
        {hasMounted && (
          <div className="flex flex-wrap">
            {/* {JSON.stringify(getItems.data)} */}

            {getItems.data?.map((item) => {
              const title = item.title?.rich_text?.[0]?.plain_text ?? "";
              const description =
                item.description?.rich_text?.[0]?.plain_text ?? "";
              const instruction = item.instruction?.url ?? "";
              const link = item.link?.url ?? "";

              const cover: string = item.cover?.url ?? "";
              return (
                <Item
                  key={Math.random()}
                  cover={cover}
                  description={description}
                  instruction={instruction}
                  link={link}
                  title={title}
                />
              );
            })}
          </div>
        )}
      </main>
      <Footer />
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
